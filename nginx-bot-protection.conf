# Nginx Bot Protection Configuration - Allow Google Ads bots
server {
    listen 80;
    server_name your-domain.com;
    
    # ALLOW Google Ads bots (important for Google Ads to work)
    if ($http_user_agent ~* (adsbot-google|adsbot-google-mobile|adsbot-google-mobile-app)) {
        # Allow these bots to pass through
        set $allowed_google_ads 1;
    }
    
    # Block other Google Bots (but not Ads bots)
    if ($http_user_agent ~* (googlebot|google-bot|googlebot-image|googlebot-news|googlebot-video|googlebot-mobile|googlebot-desktop|googlebot-smartphone|apis-google|mediapartners-google|feedfetcher-google|google-reader|google-producer|google-site-verification|google-webmaster|google-sitemaps|google-analytics|google-search-console|google-indexing|google-crawler|google-spider|google-scraper|google-fetcher|google-indexer)) {
        return 403;
    }
    
    # Block ALL Search Engine Bots
    if ($http_user_agent ~* (bingbot|bingpreview|msnbot|msnbot-media|yandexbot|yandex|yandeximages|yandexmetrika|baiduspider|baidu|baiduboxapp|duckduckbot|duckduckgo|sogou|seznambot|seznam|ahrefsbot|ahrefs|semrushbot|semrush|mj12bot|dotbot|rogerbot|exabot|gigabot|ia_archiver|archive\.org_bot|archive\.org)) {
        return 403;
    }
    
    # Block ALL Social Media Bots
    if ($http_user_agent ~* (facebookexternalhit|facebook|facebookbot|twitterbot|twitter|t\.co|linkedinbot|linkedin|whatsapp|telegrambot|telegram|slackbot|slack|discordbot|discord|instagram|instagrambot|pinterest|pinterestbot|redditbot|reddit|tumblr|tumblrbot)) {
        return 403;
    }
    
    # Block ALL Automation Tools
    if ($http_user_agent ~* (curl|wget|python|requests|axios|phantomjs|headless|selenium|puppeteer|playwright|cypress|testcafe|scrapy|beautifulsoup|lxml|mechanize|httrack|aria2c|lynx|links|w3m|elinks|links2)) {
        return 403;
    }
    
    # Block ALL SEO & Analytics Tools
    if ($http_user_agent ~* (screaming\s*frog|screamingfrogseospider|moz|mozbot|mozbar|sitebulb|lighthouse|pagespeed|gtmetrix|webpagetest)) {
        return 403;
    }
    
    # Block ALL Security & Monitoring Tools
    if ($http_user_agent ~* (nmap|masscan|nikto|sqlmap|wpscan|joomscan|acunetix|nessus|openvas|burp|zap|owasp|qualys|rapid7|tenable)) {
        return 403;
    }
    
    # Block ALL Headless Browsers
    if ($http_user_agent ~* (headless|phantom|ghost|zombie|nightmare|casper|slimer|htmlunit|webdriver|chromedriver|geckodriver|safaridriver|edgedriver)) {
        return 403;
    }
    
    # Block ALL Programming Language Libraries
    if ($http_user_agent ~* (python-requests|python-urllib|python-httplib|node-fetch|node-axios|node-request|php-curl|php-file_get_contents|php-http|java-httpclient|java-urlconnection|csharp-httpclient|csharp-webclient|golang-http|rust-reqwest)) {
        return 403;
    }
    
    # Block ALL Cloud & CDN Bots
    if ($http_user_agent ~* (cloudflare|akamai|fastly|aws|amazon-bot|azure|microsoft-bot|gcp|google-cloud|google-compute)) {
        return 403;
    }
    
    # Block ALL Monitoring & Uptime Services
    if ($http_user_agent ~* (pingdom|uptimerobot|statuscake|monitor|monitoring|healthcheck|newrelic|datadog|splunk|loggly|papertrail|sumologic)) {
        return 403;
    }
    
    # Block ALL Common Bot Patterns
    if ($http_user_agent ~* (bot|crawler|spider|scraper|fetcher|indexer|harvester|gatherer|collector|monitor|checker|validator|tester|scanner|probe|explorer|discoverer|agent|client|user-agent)) {
        return 403;
    }
    
    # Block suspicious patterns
    if ($http_user_agent ~* (automation|script|tool|headless|phantom|selenium)) {
        return 403;
    }
    
    # Block empty or very short user agents
    if ($http_user_agent ~ "^$" || $http_user_agent ~ "^.{1,20}$") {
        return 403;
    }
    
    # Block requests without common browser headers
    if ($http_accept_language = "") {
        return 403;
    }
    
    # Rate limiting - More aggressive
    limit_req_zone $binary_remote_addr zone=bot_protection:10m rate=5r/s;
    limit_req zone=bot_protection burst=10 nodelay;
    
    # Block suspicious IP patterns
    if ($remote_addr ~* "^(10\.|172\.(1[6-9]|2[0-9]|3[01])\.|192\.168\.)") {
        # Allow local networks but log
        access_log /var/log/nginx/local_access.log;
    }
    
    # Block requests with suspicious headers
    if ($http_x_forwarded_for ~* "bot|crawler|spider") {
        return 403;
    }
    
    # Block requests with suspicious referer
    if ($http_referer ~* "scraper|bot|crawler") {
        return 403;
    }
    
    # Block requests with suspicious query parameters
    if ($args ~* "bot|crawler|scraper|headless") {
        return 403;
    }
    
    # Block requests to sensitive endpoints
    location ~* ^/(api|admin|wp-admin|phpmyadmin|config|\.env|\.git) {
        return 403;
    }
    
    # Block requests to common bot paths
    location ~* ^/(robots\.txt|sitemap\.xml|feed|rss|atom) {
        # Allow legitimate bots but log
        access_log /var/log/nginx/bot_access.log;
    }
    
    # Main location block
    location / {
        # Add security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;
        
        # Proxy to your React app
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Log suspicious activity
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log;
} 